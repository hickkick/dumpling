require 'sequel'
require 'logger'

Sequel.extension :migration

DB = Sequel.connect(ENV['DATABASE_URL'])
DB.loggers << Logger.new($stdout)

begin
  puts "üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—ó..."
  migrations_path = File.expand_path('db/migrations', __dir__)
  Sequel::Migrator.run(DB, migrations_path)
  puts "‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—ó –≤–∏–∫–æ–Ω–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!"
  
  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–∞–±–ª–∏—Ü—å
  puts "\nüìã –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü—å –ø—ñ—Å–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó:"
  DB.tables.each { |table| puts "- #{table}" }
  
  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ç–∞–±–ª–∏—Ü—ñ users
  if DB.tables.include?(:users)
    puts "\nüß© –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ñ users:"
    DB.schema(:users).each do |column, info|
      puts "- #{column}: #{info[:type]} #{info[:allow_null] ? 'NULL' : 'NOT NULL'}"
    end
  end

rescue => e
  puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –º—ñ–≥—Ä–∞—Ü—ñ–π: #{e.message}"
  puts e.backtrace.first(5)
  exit(1)
end
